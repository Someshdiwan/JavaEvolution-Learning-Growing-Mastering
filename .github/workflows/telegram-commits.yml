name: Telegram â€“ Last 10 Commits (Pretty)

on:
  push:
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  send:
    runs-on: ubuntu-latest
    environment: SANDBOX   # TG_BOT_TOKEN + TG_CHAT_ID secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Build message (HTML)
        id: msg
        shell: bash
        run: |
          set -euo pipefail

          REPO="${{ github.repository }}"
          ACTOR="${{ github.actor }}"
          REF_NAME="${{ github.ref_name }}"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          REPO_URL="${{ github.server_url }}/${{ github.repository }}"
          COMMIT_BASE="${REPO_URL}/commit"

          # minimal HTML escaper for Telegram
          esc() { sed -e 's/&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g'; }

          mapfile -t LINES < <(git log -n 10 --pretty=format:'%s%x1f%h%x1f%an%x1f%H' || true)

          if [[ ${#LINES[@]} -eq 0 ]]; then
            COMMITS_HTML="(no commit messages found)"
          else
            COMMITS_HTML=""
            for row in "${LINES[@]}"; do
              IFS=$'\x1f' read -r subj short author full <<<"$row"
              subj_esc="$(printf '%s' "$subj"   | esc)"
              author_esc="$(printf '%s' "$author" | esc)"
              COMMITS_HTML+="- <a href=\"${COMMIT_BASE}/${full}\">${subj_esc}</a> (<code>${short}</code>) by ${author_esc}\n"
            done
          fi

          HEADER="<b>ðŸ“£ Last 10 commits</b>\n"
          META="Repo: <a href=\"${REPO_URL}\">${REPO}</a>\nBy: ${ACTOR}\nRef: <code>${REF_NAME}</code>\nRun: <a href=\"${RUN_URL}\">view run</a>\n\n"
          FOOTER="\nRepo: <a href=\"${REPO_URL}\">${REPO_URL}</a>"

          MESSAGE="${HEADER}${META}${COMMITS_HTML}${FOOTER}"

          # write output with a custom, unquoted delimiter and LF-only
          {
            printf 'text<<MSGEOF\n'
            printf '%s\n' "$MESSAGE"
            printf 'MSGEOF\n'
          } >> "$GITHUB_OUTPUT"

      - name: Send to Telegram (HTML)
        shell: bash
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          TEXT: ${{ steps.msg.outputs.text }}
        run: |
          set -euo pipefail
          [[ -n "${TG_BOT_TOKEN:-}" && -n "${TG_CHAT_ID:-}" ]] || { echo "Missing TG secrets"; exit 1; }

          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -H 'Content-Type: application/json' \
            -d "$(jq -n \
                  --arg chat_id "$TG_CHAT_ID" \
                  --arg text "$TEXT" \
                  '{chat_id:$chat_id, text:$text, parse_mode:"HTML", disable_web_page_preview:true}')"

          echo "âœ… Posted to Telegram."
