You cannot create an instance of an abstract class in Java.

Abstract classes are designed to be incomplete and serve as a base for other classes.

They may contain abstract methods, which have no implementation, making it impossible to instantiate them directly.

However, you can create instances of concrete subclasses that extend the abstract class and provide implementations
for all abstract methods.


What happens if a subclass of an abstract class doesn't implement all the abstract methods?
Ans:
If a subclass of an abstract class doesn't implement all the abstract methods, the subclass itself becomes abstract. This means that the subclass cannot be instantiated either. To create a concrete class, all abstract methods from the superclass must be implemented. If you want to leave some methods unimplemented, you must declare the subclass as abstract as well:

```java
abstract class Shape {
    abstract double calculateArea();
}

abstract class Rectangle extends Shape {
    // calculateArea() is not implemented, so Rectangle is also abstract
}
```