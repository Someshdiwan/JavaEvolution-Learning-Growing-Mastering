What is a Dictionary in Java?

In Java, there is no direct dictionary data type like in Python.
However, a similar structure can be created using the `HashMap` class from the `java.util` package.

- A `HashMap` stores key-value pairs.
- **Key**: The unique identifier.
- **Value**: The data associated with the key.

Example:

HashMap<String, Integer> studentAges = new HashMap<>();
studentAges.put("Alice", 20);   // Key: "Alice", Value: 20
studentAges.put("Bob", 22);     // Key: "Bob", Value: 22
studentAges.put("Charlie", 19); // Key: "Charlie", Value: 19


How to Iterate Over a Dictionary in Java
----------------------------------------

There are three main ways to iterate over a `HashMap`:


1. Iterate Over Keys
--------------------
You can retrieve all the keys using the `keySet()` method and loop through them.

import java.util.HashMap;
public class Main {
    public static void main(String[] args) {
        HashMap<String, Integer> studentAges = new HashMap<>();
        studentAges.put("Alice", 20);
        studentAges.put("Bob", 22);
        studentAges.put("Charlie", 19);

        System.out.println("Keys:");
        for (String key : studentAges.keySet()) {
            System.out.println(key);
        }
    }
}

Output:
Keys:
Alice
Bob
Charlie


2. Iterate Over Values
----------------------
You can retrieve all the values using the `values()` method and loop through them.

import java.util.HashMap;
public class Main {
    public static void main(String[] args) {
        HashMap<String, Integer> studentAges = new HashMap<>();
        studentAges.put("Alice", 20);
        studentAges.put("Bob", 22);
        studentAges.put("Charlie", 19);

        System.out.println("Values:");
        for (Integer value : studentAges.values()) {
            System.out.println(value);
        }
    }
}

Output:
Values:
20
22
19


3. Iterate Over Key-Value Pairs
-------------------------------
You can retrieve both keys and values together using the `entrySet()` method.

import java.util.HashMap;
import java.util.Map;
public class Main {
    public static void main(String[] args) {
        HashMap<String, Integer> studentAges = new HashMap<>();
        studentAges.put("Alice", 20);
        studentAges.put("Bob", 22);
        studentAges.put("Charlie", 19);

        System.out.println("Key-Value Pairs:");
        for (Map.Entry<String, Integer> entry : studentAges.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}

Output:
Key-Value Pairs:
Alice: 20
Bob: 22
Charlie: 19


Step-by-Step Explanation of the Third Example
---------------------------------------------
- `entrySet()` → Returns a set of all key-value pairs in the HashMap.
- `Map.Entry` → Represents a single key-value pair.
- `for (Map.Entry<String, Integer> entry : studentAges.entrySet())` → Iterates through each pair.

Inside the loop:
- `entry.getKey()` → Access the key.
- `entry.getValue()` → Access the value.


Key Methods for Iterating a HashMap
-----------------------------------
Method       Purpose
-----------  -------------------------------------------------
keySet()     Returns all the keys in the map.
values()     Returns all the values in the map.
entrySet()   Returns all key-value pairs in the map.
