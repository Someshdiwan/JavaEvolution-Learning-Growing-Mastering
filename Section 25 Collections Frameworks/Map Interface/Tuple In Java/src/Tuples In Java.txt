Tuples in Java:

In Java, tuples do not exist as a built-in data type like they do in some other programming languages (e.g., Python).
However, a tuple is a concept that refers to a collection of multiple elements grouped together.

Tuples are often used when you want to store a small, fixed number of related items.

---

What is a Tuple?
----------------
- A tuple is a collection of elements where each element can have a different data type.
- Think of a tuple as a lightweight container for grouping related data together.

Example:
A tuple (1, "apple", 2.5) contains:
- An integer: 1
- A string: "apple"
- A float: 2.5

---

How to Simulate Tuples in Java?
-------------------------------
Java does not have a native `Tuple` type, but you can simulate tuples using:
1. Custom Classes (most common approach).
2. Libraries like **Apache Commons** or **JavaFX** (optional).

---

Custom Tuple Class Example
--------------------------

Tuple Class:

// Define a Tuple class to hold two elements
class Tuple {
    String first;   // First element of the tuple
    String second;  // Second element of the tuple

    // Constructor to initialize the tuple
    public Tuple(String first, String second) {
        this.first = first;
        this.second = second;
    }
}

How to Use the Tuple Class:

public class Main {
    public static void main(String[] args) {
        // Create an array of tuples
        Tuple[] tuples = {
            new Tuple("apple", "fruit"),
            new Tuple("carrot", "vegetable"),
            new Tuple("banana", "fruit")
        };

        // Iterate through the tuple array using a for-each loop
        for (Tuple tuple : tuples) {
            System.out.println(tuple.first + ": " + tuple.second);
        }
    }
}

Output:
apple: fruit
carrot: vegetable
banana: fruit

---

Explanation of the Code
-----------------------
**Tuple Class:**
- Represents a pair of elements.
- Contains two fields: `first` and `second`.
- A constructor initializes the fields when creating a Tuple.

**Array of Tuples:**
- An array of Tuple objects is created:

  Tuple[] tuples = {
      new Tuple("apple", "fruit"),
      new Tuple("carrot", "vegetable"),
      new Tuple("banana", "fruit")
  };

- Each Tuple object stores two related pieces of information (e.g., "apple" and "fruit").

**Iterating Through Tuples:**
- A for-each loop iterates through the array of tuples:

  for (Tuple tuple : tuples) {
      System.out.println(tuple.first + ": " + tuple.second);
  }

- Access the elements of each tuple using the `first` and `second` fields.

---

Where Are Tuples Used?
----------------------
- To return multiple values from a method (instead of returning just one value).
- To group related data without creating a new class every time.

---

Alternative: Using JavaFX or Apache Commons
-------------------------------------------

If you use external libraries, **JavaFX** provides a `Pair` class that works as a tuple with two elements.

Example Using Pair from JavaFX:

import javafx.util.Pair;

public class Main {
    public static void main(String[] args) {
        // Create a Pair (acts as a 2-element tuple)
        Pair<String, String> pair = new Pair<>("apple", "fruit");

        // Accessing elements of the pair
        System.out.println("Key: " + pair.getKey());
        System.out.println("Value: " + pair.getValue());
    }
}

Output:
Key: apple
Value: fruit

---

Summary
-------
- Java does not have native tuple support, but you can simulate it using custom classes or libraries.
- Tuples are useful for grouping related data together.
- In the provided example, the `Tuple` class acts as a lightweight container for two pieces of related information.
